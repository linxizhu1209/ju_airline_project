version: '3.8'
services:
  db:
    image: mysql:latest
    container_name: my-mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: airline
      MYSQL_USER: user
      MYSQL_PASSWORD: 12341234
    volumes:
      - db_data:/var/lib/mysql
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  redis-commander:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8083:8081"
    depends_on:
      - redis
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    platform: linux/amd64
    ports:
      - "5672:5672"   # 메시지 브로커 포트
      - "15672:15672" # 관리 UI 포트
      - "61613:61613" # STOMP 포트
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  mongo:
    build: .
    image: mongo:7.0.5
    container_name: mongo-my
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: airline
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin  # 추가: 브라우저에서 로그인할 ID
      ME_CONFIG_BASICAUTH_PASSWORD: admin  # 추가: 브라우저에서 로그인할 PW
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      - mongo
volumes:
  db_data:
  mongo_data:
  redis_data: